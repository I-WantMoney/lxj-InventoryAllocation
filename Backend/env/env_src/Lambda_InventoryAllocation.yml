# In this updated template, I added the `RTLambdaExecutionRole` resource to create the IAM role for the Lambda functions. The role is defined with the necessary permissions to assume the role and create log groups, log streams, and put log events.
# The `Role` property of the Lambda functions now references the `RTLambdaExecutionRole` using the `!GetAtt` intrinsic function to retrieve the ARN of the created role.
# With this modification, the template will create the required IAM role and associate it with the Lambda functions.

AWSTemplateFormatVersion: '2010-09-09'
Description: 'RayooTech AWS CloudFormation template for inventory allocation system'

Parameters:
  RTDBHost:
    Type: String
    Description: 'RayooTech Database host'
  RTDBPort:
    Type: String
    Description: 'RayooTech Database port'
  RTDBName:
    Type: String
    Description: 'RayooTech Database name'
  RTDBUser:
    Type: String
    Description: 'RayooTech Database user'
  RTDBPassword:
    Type: String
    Description: 'RayooTech Database password'

Resources:
  RTLambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'RTLambdaExecutionRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: 'RTLambdaExecutionPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

  RTMainLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'RTMainFunction'
      Runtime: 'python3.9'
      Handler: 'main.handler'
      Role: 'RTLambdaExecutionRole'
      Code:
        ZipFile: |
          # Main Lambda function code
      Environment:
        Variables:
          DB_HOST: 'rt-inventory-allocation-db.abcdefghijkl.ap-northeast-1.rds.amazonaws.com'
          DB_PORT: '5432'
          DB_NAME: 'rt_inventory_allocation_db'
          DB_USER: 'rtadmin'
          DB_PASSWORD: 'RayooTech2023!'

  RTAllocationLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'RTAllocationFunction'
      Runtime: 'python3.9'
      Handler: 'allocation.allocate_inventory'
      Role: !GetAtt RTLambdaExecutionRole.Arn
      Code:
        ZipFile: |
          # Allocation Lambda function code

  RTModelsLambdaLayer:
    Type: 'AWS::Lambda::LayerVersion'
    Properties:
      LayerName: 'RTModelsLayer'
      Description: 'RayooTech Models layer'
      Content:
        ZipFile: |
          # Models code

  RTDatabaseLambdaLayer:
    Type: 'AWS::Lambda::LayerVersion'
    Properties:
      LayerName: 'RTDatabaseLayer'
      Description: 'RayooTech Database layer'
      Content:
        ZipFile: |
          # Database code

  RTSchemasLambdaLayer:
    Type: 'AWS::Lambda::LayerVersion'
    Properties:
      LayerName: 'RTSchemasLayer'
      Description: 'RayooTech Schemas layer'
      Content:
        ZipFile: |
          # Schemas code

