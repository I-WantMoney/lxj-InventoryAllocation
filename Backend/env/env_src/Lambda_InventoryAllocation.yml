# パラメータ記述サンプル:
#   DBHost: 'your-db-host.example.com'
#   DBPort: '5432'
#   DBName: 'your-db-name'
#   DBUser: 'your-db-user'
#   DBPassword: 'your-db-password'

AWSTemplateFormatVersion: '2010-09-09'
Description: '在庫割当システムのAWS CloudFormationテンプレート'

Parameters:
  DBHost:
    Type: String
    Description: 'データベースのホスト名'
  DBPort:
    Type: String
    Description: 'データベースのポート番号'
  DBName:
    Type: String
    Description: 'データベース名'
  DBUser:
    Type: String
    Description: 'データベースのユーザー名'
  DBPassword:
    Type: String
    NoEcho: true
    Description: 'データベースのパスワード'

Resources:
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'LambdaExecutionRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: 'LambdaExecutionPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

  MainLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'MainFunction'
      Runtime: 'python3.9'
      Handler: 'main.handler'
      Role: !GetAtt LambdaExecutionRole.Arn  # LambdaExecutionRoleリソースのARN属性を取得
      Code:
        ZipFile: |
          # メインのLambda関数のコード
      Environment:
        Variables:
          DB_HOST: !Ref DBHost  # DBHostパラメータの値を参照
          DB_PORT: !Ref DBPort  # DBPortパラメータの値を参照
          DB_NAME: !Ref DBName  # DBNameパラメータの値を参照
          DB_USER: !Ref DBUser  # DBUserパラメータの値を参照
          DB_PASSWORD: !Ref DBPassword  # DBPasswordパラメータの値を参照

  AllocationLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'AllocationFunction'
      Runtime: 'python3.9'
      Handler: 'allocation.allocate_inventory'
      Role: !GetAtt LambdaExecutionRole.Arn  # LambdaExecutionRoleリソースのARN属性を取得
      Code:
        ZipFile: |
          # 在庫割当のLambda関数のコード

  ModelsLambdaLayer:
    Type: 'AWS::Lambda::LayerVersion'
    Properties:
      LayerName: 'ModelsLayer'
      Description: 'モデル用のレイヤー'
      Content:
        ZipFile: |
          # モデルのコード

  DatabaseLambdaLayer:
    Type: 'AWS::Lambda::LayerVersion'
    Properties:
      LayerName: 'DatabaseLayer'
      Description: 'データベース用のレイヤー'
      Content:
        ZipFile: |
          # データベースのコード

  SchemasLambdaLayer:
    Type: 'AWS::Lambda::LayerVersion'
    Properties:
      LayerName: 'SchemasLayer'
      Description: 'スキーマ用のレイヤー'
      Content:
        ZipFile: |
          # スキーマのコード
